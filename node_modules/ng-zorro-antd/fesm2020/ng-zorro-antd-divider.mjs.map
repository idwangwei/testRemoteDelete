{"version":3,"file":"ng-zorro-antd-divider.mjs","sources":["../../components/divider/divider.component.ts","../../components/divider/divider.module.ts","../../components/divider/public-api.ts","../../components/divider/ng-zorro-antd-divider.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\n\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'nz-divider',\n  exportAs: 'nzDivider',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <span *ngIf=\"nzText\" class=\"ant-divider-inner-text\">\n      <ng-container *nzStringTemplateOutlet=\"nzText\">{{ nzText }}</ng-container>\n    </span>\n  `,\n  host: {\n    class: 'ant-divider',\n    '[class.ant-divider-horizontal]': `nzType === 'horizontal'`,\n    '[class.ant-divider-vertical]': `nzType === 'vertical'`,\n    '[class.ant-divider-with-text]': `nzText`,\n    '[class.ant-divider-plain]': `nzPlain`,\n    '[class.ant-divider-with-text-left]': `nzText && nzOrientation === 'left'`,\n    '[class.ant-divider-with-text-right]': `nzText && nzOrientation === 'right'`,\n    '[class.ant-divider-with-text-center]': `nzText && nzOrientation === 'center'`,\n    '[class.ant-divider-dashed]': `nzDashed`\n  }\n})\nexport class NzDividerComponent {\n  static ngAcceptInputType_nzDashed: BooleanInput;\n  static ngAcceptInputType_nzPlain: BooleanInput;\n\n  @Input() nzText?: string | TemplateRef<void>;\n  @Input() nzType: 'horizontal' | 'vertical' = 'horizontal';\n  @Input() nzOrientation: 'left' | 'right' | 'center' = 'center';\n  @Input() @InputBoolean() nzDashed = false;\n  @Input() @InputBoolean() nzPlain = false;\n\n  constructor() {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\nimport { NzDividerComponent } from './divider.component';\n\n@NgModule({\n  imports: [BidiModule, CommonModule, NzOutletModule],\n  declarations: [NzDividerComponent],\n  exports: [NzDividerComponent]\n})\nexport class NzDividerModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './divider.component';\nexport * from './divider.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;MAiCa,kBAAkB;IAU7B;QALS,WAAM,GAA8B,YAAY,CAAC;QACjD,kBAAa,GAAgC,QAAQ,CAAC;QACtC,aAAQ,GAAG,KAAK,CAAC;QACjB,YAAO,GAAG,KAAK,CAAC;KAEzB;;+GAVL,kBAAkB;mGAAlB,kBAAkB,2sBAjBnB;;;;GAIT;AAoBwB;IAAf,YAAY,EAAE;oDAAkB;AACjB;IAAf,YAAY,EAAE;mDAAiB;2FAR9B,kBAAkB;kBAvB9B,SAAS;mBAAC;oBACT,QAAQ,EAAE,YAAY;oBACtB,QAAQ,EAAE,WAAW;oBACrB,mBAAmB,EAAE,KAAK;oBAC1B,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,QAAQ,EAAE;;;;GAIT;oBACD,IAAI,EAAE;wBACJ,KAAK,EAAE,aAAa;wBACpB,gCAAgC,EAAE,yBAAyB;wBAC3D,8BAA8B,EAAE,uBAAuB;wBACvD,+BAA+B,EAAE,QAAQ;wBACzC,2BAA2B,EAAE,SAAS;wBACtC,oCAAoC,EAAE,oCAAoC;wBAC1E,qCAAqC,EAAE,qCAAqC;wBAC5E,sCAAsC,EAAE,sCAAsC;wBAC9E,4BAA4B,EAAE,UAAU;qBACzC;iBACF;0EAKU,MAAM;sBAAd,KAAK;gBACG,MAAM;sBAAd,KAAK;gBACG,aAAa;sBAArB,KAAK;gBACmB,QAAQ;sBAAhC,KAAK;gBACmB,OAAO;sBAA/B,KAAK;;;ACzCR;;;;MAkBa,eAAe;;4GAAf,eAAe;6GAAf,eAAe,iBAHX,kBAAkB,aADvB,UAAU,EAAE,YAAY,EAAE,cAAc,aAExC,kBAAkB;6GAEjB,eAAe,YAJjB,CAAC,UAAU,EAAE,YAAY,EAAE,cAAc,CAAC;2FAIxC,eAAe;kBAL3B,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,cAAc,CAAC;oBACnD,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;iBAC9B;;;ACjBD;;;;;ACAA;;;;;;"}